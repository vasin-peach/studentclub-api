# Step
stages:
  - build
  - deploy

# Default variable
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_NAME: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_IMAGE_URI: registry.gitlab.com/vasin.me/vasin-studentclub-api:latest

# Login Registry
before_script:
  - "docker login -u $GITLAB_USERNAME -p $GITLAB_TOKEN registry.gitlab.com"

# Build Image
build-image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - "docker build --pull --no-cache -t $DOCKER_IMAGE_NAME/production -f .docker/Dockerfile ."
    - "docker push $DOCKER_IMAGE_NAME/production"
  after_script:
    - "docker rmi $(docker images -qa -f 'dangling=true')"
  only:
    - master

# Deploy Production
deploy-production:
  image: docker:stable
  stage: deploy
  tags:
    - deploy
  before_script:
    # install package
    - apk update
    - apk add --no-cache python python-dev py-pip build-base libffi-dev openssl-dev openssh
    - pip install docker-compose
    - docker-compose --version
    - git submodule update --init --recursive
  script:
    - docker-compose -f .cd/studentclub.api.prod.yml pull
    - docker-compose -f .cd/studentclub.api.prod.yml stop
    - docker-compose -f .cd/studentclub.api.prod.yml rm --force
    - docker-compose -f .cd/studentclub.api.prod.yml up -d
  after_script:
    - docker rmi $(docker images -qa -f 'dangling=true')
  environment:
    name: production
    url: http://api.studentclub.vasin.me
  only:
    - master
